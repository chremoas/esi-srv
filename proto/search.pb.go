// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package chremoas_esi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SearchRequest struct {
	SearchString string `protobuf:"bytes,1,opt,name=SearchString" json:"SearchString,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *SearchRequest) GetSearchString() string {
	if m != nil {
		return m.SearchString
	}
	return ""
}

type SearchResponse struct {
	Agent         []int32 `protobuf:"varint,1,rep,packed,name=Agent" json:"Agent,omitempty"`
	Alliance      []int32 `protobuf:"varint,2,rep,packed,name=Alliance" json:"Alliance,omitempty"`
	Character     []int32 `protobuf:"varint,3,rep,packed,name=Character" json:"Character,omitempty"`
	Constellation []int32 `protobuf:"varint,4,rep,packed,name=Constellation" json:"Constellation,omitempty"`
	Corporation   []int32 `protobuf:"varint,5,rep,packed,name=Corporation" json:"Corporation,omitempty"`
	Faction       []int32 `protobuf:"varint,6,rep,packed,name=Faction" json:"Faction,omitempty"`
	Inventorytype []int32 `protobuf:"varint,7,rep,packed,name=Inventorytype" json:"Inventorytype,omitempty"`
	Region        []int32 `protobuf:"varint,8,rep,packed,name=Region" json:"Region,omitempty"`
	Solarsystem   []int32 `protobuf:"varint,9,rep,packed,name=Solarsystem" json:"Solarsystem,omitempty"`
	Station       []int32 `protobuf:"varint,10,rep,packed,name=Station" json:"Station,omitempty"`
	Wormhole      []int32 `protobuf:"varint,11,rep,packed,name=Wormhole" json:"Wormhole,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *SearchResponse) GetAgent() []int32 {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *SearchResponse) GetAlliance() []int32 {
	if m != nil {
		return m.Alliance
	}
	return nil
}

func (m *SearchResponse) GetCharacter() []int32 {
	if m != nil {
		return m.Character
	}
	return nil
}

func (m *SearchResponse) GetConstellation() []int32 {
	if m != nil {
		return m.Constellation
	}
	return nil
}

func (m *SearchResponse) GetCorporation() []int32 {
	if m != nil {
		return m.Corporation
	}
	return nil
}

func (m *SearchResponse) GetFaction() []int32 {
	if m != nil {
		return m.Faction
	}
	return nil
}

func (m *SearchResponse) GetInventorytype() []int32 {
	if m != nil {
		return m.Inventorytype
	}
	return nil
}

func (m *SearchResponse) GetRegion() []int32 {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *SearchResponse) GetSolarsystem() []int32 {
	if m != nil {
		return m.Solarsystem
	}
	return nil
}

func (m *SearchResponse) GetStation() []int32 {
	if m != nil {
		return m.Station
	}
	return nil
}

func (m *SearchResponse) GetWormhole() []int32 {
	if m != nil {
		return m.Wormhole
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "chremoas.esi.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "chremoas.esi.SearchResponse")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x6a, 0xf2, 0x40,
	0x14, 0x85, 0x7f, 0xf5, 0x37, 0xea, 0x55, 0xbb, 0x18, 0x4a, 0x19, 0xac, 0x0b, 0x09, 0x5d, 0xb8,
	0xca, 0xa2, 0x3e, 0x81, 0x48, 0x0b, 0xdd, 0x26, 0xd0, 0xae, 0xa7, 0xc3, 0xc5, 0x04, 0xc6, 0xb9,
	0xe9, 0x9d, 0xa9, 0xe0, 0x9b, 0xf6, 0x71, 0x4a, 0x66, 0x4c, 0x9b, 0x40, 0x97, 0xe7, 0x3b, 0x67,
	0x38, 0xc3, 0x3d, 0xb0, 0x70, 0xa8, 0x58, 0x97, 0x59, 0xcd, 0xe4, 0x49, 0x2c, 0x74, 0xc9, 0x78,
	0x22, 0xe5, 0x32, 0x74, 0x55, 0xba, 0x83, 0x65, 0x11, 0xdc, 0x1c, 0x3f, 0x3e, 0xd1, 0x79, 0x91,
	0xc2, 0x22, 0x82, 0xc2, 0x73, 0x65, 0x8f, 0x72, 0xb0, 0x19, 0x6c, 0x67, 0x79, 0x8f, 0xa5, 0x5f,
	0x43, 0xb8, 0x69, 0x5f, 0xb9, 0x9a, 0xac, 0x43, 0x71, 0x0b, 0xe3, 0xfd, 0x11, 0xad, 0x97, 0x83,
	0xcd, 0x68, 0x3b, 0xce, 0xa3, 0x10, 0x2b, 0x98, 0xee, 0x8d, 0xa9, 0x94, 0xd5, 0x28, 0x87, 0xc1,
	0xf8, 0xd1, 0x62, 0x0d, 0xb3, 0x43, 0xa9, 0x58, 0x69, 0x8f, 0x2c, 0x47, 0xc1, 0xfc, 0x05, 0xe2,
	0x01, 0x96, 0x07, 0xb2, 0xce, 0xa3, 0x31, 0xca, 0x57, 0x64, 0xe5, 0xff, 0x90, 0xe8, 0x43, 0xb1,
	0x81, 0xf9, 0x81, 0xb8, 0x26, 0x8e, 0x99, 0x71, 0xc8, 0x74, 0x91, 0x90, 0x30, 0x79, 0x56, 0x3a,
	0xb8, 0x49, 0x70, 0x5b, 0xd9, 0x34, 0xbc, 0xd8, 0x33, 0x5a, 0x4f, 0x7c, 0xf1, 0x97, 0x1a, 0xe5,
	0x24, 0x36, 0xf4, 0xa0, 0xb8, 0x83, 0x24, 0xc7, 0x63, 0xf3, 0x7c, 0x1a, 0xec, 0xab, 0x6a, 0x9a,
	0x0b, 0x32, 0x8a, 0xdd, 0xc5, 0x79, 0x3c, 0xc9, 0x59, 0x6c, 0xee, 0xa0, 0xa6, 0xb9, 0xf0, 0xf1,
	0x5f, 0x10, 0x9b, 0xaf, 0xb2, 0xb9, 0xca, 0x1b, 0xf1, 0xa9, 0x24, 0x83, 0x72, 0x1e, 0xaf, 0xd2,
	0xea, 0xc7, 0xd7, 0x76, 0x8f, 0x02, 0xf9, 0x5c, 0x69, 0x14, 0x4f, 0x90, 0x44, 0x20, 0xee, 0xb3,
	0xee, 0x72, 0x59, 0x6f, 0xb6, 0xd5, 0xfa, 0x6f, 0x33, 0xae, 0x93, 0xfe, 0x7b, 0x4f, 0xc2, 0xf8,
	0xbb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xa7, 0x86, 0x1c, 0x0c, 0x02, 0x00, 0x00,
}
