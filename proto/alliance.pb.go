// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alliance.proto

/*
Package chremoas_esi is a generated protocol buffer package.

It is generated from these files:
	alliance.proto
	character.proto
	common.proto
	corporation.proto
	search.proto

It has these top-level messages:
	GetAlliancesRequest
	GetAlliancesResponse
	GetAllianceByIdRequest
	GetAllianceByIdResponse
	GetAllianceCorporationsByIdRequest
	GetAllianceCorporationsByIdResponse
	GetAllianceIconsByIdRequest
	GetAllianceIconsByIdResponse
	GetAllianceNamesByIdsRequest
	GetAllianceNamesByIdsResponse
	GetCharacterByIdRequest
	GetCharacterByIdResponse
	Alliance
	Icons
	AllianceNames
	Character
	Corporation
	GetCorporationByIdRequest
	GetCorporationByIdResponse
	SearchRequest
	SearchResponse
*/
package chremoas_esi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetAlliancesRequest struct {
}

func (m *GetAlliancesRequest) Reset()                    { *m = GetAlliancesRequest{} }
func (m *GetAlliancesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAlliancesRequest) ProtoMessage()               {}
func (*GetAlliancesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetAlliancesResponse struct {
	Ids []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
}

func (m *GetAlliancesResponse) Reset()                    { *m = GetAlliancesResponse{} }
func (m *GetAlliancesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAlliancesResponse) ProtoMessage()               {}
func (*GetAlliancesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetAlliancesResponse) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetAllianceByIdRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *GetAllianceByIdRequest) Reset()                    { *m = GetAllianceByIdRequest{} }
func (m *GetAllianceByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllianceByIdRequest) ProtoMessage()               {}
func (*GetAllianceByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAllianceByIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAllianceByIdResponse struct {
	Alliance *Alliance `protobuf:"bytes,1,opt,name=Alliance" json:"Alliance,omitempty"`
}

func (m *GetAllianceByIdResponse) Reset()                    { *m = GetAllianceByIdResponse{} }
func (m *GetAllianceByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllianceByIdResponse) ProtoMessage()               {}
func (*GetAllianceByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetAllianceByIdResponse) GetAlliance() *Alliance {
	if m != nil {
		return m.Alliance
	}
	return nil
}

// GetAllianceCorporationsById
type GetAllianceCorporationsByIdRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *GetAllianceCorporationsByIdRequest) Reset()         { *m = GetAllianceCorporationsByIdRequest{} }
func (m *GetAllianceCorporationsByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllianceCorporationsByIdRequest) ProtoMessage()    {}
func (*GetAllianceCorporationsByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4}
}

func (m *GetAllianceCorporationsByIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAllianceCorporationsByIdResponse struct {
	Ids []int32 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
}

func (m *GetAllianceCorporationsByIdResponse) Reset()         { *m = GetAllianceCorporationsByIdResponse{} }
func (m *GetAllianceCorporationsByIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllianceCorporationsByIdResponse) ProtoMessage()    {}
func (*GetAllianceCorporationsByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5}
}

func (m *GetAllianceCorporationsByIdResponse) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetAllianceIconsByIdRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (m *GetAllianceIconsByIdRequest) Reset()                    { *m = GetAllianceIconsByIdRequest{} }
func (m *GetAllianceIconsByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllianceIconsByIdRequest) ProtoMessage()               {}
func (*GetAllianceIconsByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetAllianceIconsByIdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetAllianceIconsByIdResponse struct {
	Icons *Icons `protobuf:"bytes,1,opt,name=Icons" json:"Icons,omitempty"`
}

func (m *GetAllianceIconsByIdResponse) Reset()                    { *m = GetAllianceIconsByIdResponse{} }
func (m *GetAllianceIconsByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllianceIconsByIdResponse) ProtoMessage()               {}
func (*GetAllianceIconsByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetAllianceIconsByIdResponse) GetIcons() *Icons {
	if m != nil {
		return m.Icons
	}
	return nil
}

type GetAllianceNamesByIdsRequest struct {
	Ids []int64 `protobuf:"varint,1,rep,packed,name=Ids" json:"Ids,omitempty"`
}

func (m *GetAllianceNamesByIdsRequest) Reset()                    { *m = GetAllianceNamesByIdsRequest{} }
func (m *GetAllianceNamesByIdsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllianceNamesByIdsRequest) ProtoMessage()               {}
func (*GetAllianceNamesByIdsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetAllianceNamesByIdsRequest) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type GetAllianceNamesByIdsResponse struct {
	Names []*AllianceNames `protobuf:"bytes,1,rep,name=Names" json:"Names,omitempty"`
}

func (m *GetAllianceNamesByIdsResponse) Reset()                    { *m = GetAllianceNamesByIdsResponse{} }
func (m *GetAllianceNamesByIdsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllianceNamesByIdsResponse) ProtoMessage()               {}
func (*GetAllianceNamesByIdsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetAllianceNamesByIdsResponse) GetNames() []*AllianceNames {
	if m != nil {
		return m.Names
	}
	return nil
}

func init() {
	proto.RegisterType((*GetAlliancesRequest)(nil), "chremoas.esi.GetAlliancesRequest")
	proto.RegisterType((*GetAlliancesResponse)(nil), "chremoas.esi.GetAlliancesResponse")
	proto.RegisterType((*GetAllianceByIdRequest)(nil), "chremoas.esi.GetAllianceByIdRequest")
	proto.RegisterType((*GetAllianceByIdResponse)(nil), "chremoas.esi.GetAllianceByIdResponse")
	proto.RegisterType((*GetAllianceCorporationsByIdRequest)(nil), "chremoas.esi.GetAllianceCorporationsByIdRequest")
	proto.RegisterType((*GetAllianceCorporationsByIdResponse)(nil), "chremoas.esi.GetAllianceCorporationsByIdResponse")
	proto.RegisterType((*GetAllianceIconsByIdRequest)(nil), "chremoas.esi.GetAllianceIconsByIdRequest")
	proto.RegisterType((*GetAllianceIconsByIdResponse)(nil), "chremoas.esi.GetAllianceIconsByIdResponse")
	proto.RegisterType((*GetAllianceNamesByIdsRequest)(nil), "chremoas.esi.GetAllianceNamesByIdsRequest")
	proto.RegisterType((*GetAllianceNamesByIdsResponse)(nil), "chremoas.esi.GetAllianceNamesByIdsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AllianceService service

type AllianceServiceClient interface {
	GetAlliances(ctx context.Context, in *GetAlliancesRequest, opts ...client.CallOption) (*GetAlliancesResponse, error)
	GetAllianceById(ctx context.Context, in *GetAllianceByIdRequest, opts ...client.CallOption) (*GetAllianceByIdResponse, error)
	GetAllianceCorporationsById(ctx context.Context, in *GetAllianceCorporationsByIdRequest, opts ...client.CallOption) (*GetAllianceCorporationsByIdResponse, error)
	GetAllianceIconsById(ctx context.Context, in *GetAllianceIconsByIdRequest, opts ...client.CallOption) (*GetAllianceIconsByIdResponse, error)
	GetAllianceNamesByIds(ctx context.Context, in *GetAllianceNamesByIdsRequest, opts ...client.CallOption) (*GetAllianceNamesByIdsResponse, error)
}

type allianceServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAllianceServiceClient(serviceName string, c client.Client) AllianceServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "chremoas.esi"
	}
	return &allianceServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *allianceServiceClient) GetAlliances(ctx context.Context, in *GetAlliancesRequest, opts ...client.CallOption) (*GetAlliancesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AllianceService.GetAlliances", in)
	out := new(GetAlliancesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allianceServiceClient) GetAllianceById(ctx context.Context, in *GetAllianceByIdRequest, opts ...client.CallOption) (*GetAllianceByIdResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AllianceService.GetAllianceById", in)
	out := new(GetAllianceByIdResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allianceServiceClient) GetAllianceCorporationsById(ctx context.Context, in *GetAllianceCorporationsByIdRequest, opts ...client.CallOption) (*GetAllianceCorporationsByIdResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AllianceService.GetAllianceCorporationsById", in)
	out := new(GetAllianceCorporationsByIdResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allianceServiceClient) GetAllianceIconsById(ctx context.Context, in *GetAllianceIconsByIdRequest, opts ...client.CallOption) (*GetAllianceIconsByIdResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AllianceService.GetAllianceIconsById", in)
	out := new(GetAllianceIconsByIdResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *allianceServiceClient) GetAllianceNamesByIds(ctx context.Context, in *GetAllianceNamesByIdsRequest, opts ...client.CallOption) (*GetAllianceNamesByIdsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AllianceService.GetAllianceNamesByIds", in)
	out := new(GetAllianceNamesByIdsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AllianceService service

type AllianceServiceHandler interface {
	GetAlliances(context.Context, *GetAlliancesRequest, *GetAlliancesResponse) error
	GetAllianceById(context.Context, *GetAllianceByIdRequest, *GetAllianceByIdResponse) error
	GetAllianceCorporationsById(context.Context, *GetAllianceCorporationsByIdRequest, *GetAllianceCorporationsByIdResponse) error
	GetAllianceIconsById(context.Context, *GetAllianceIconsByIdRequest, *GetAllianceIconsByIdResponse) error
	GetAllianceNamesByIds(context.Context, *GetAllianceNamesByIdsRequest, *GetAllianceNamesByIdsResponse) error
}

func RegisterAllianceServiceHandler(s server.Server, hdlr AllianceServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AllianceService{hdlr}, opts...))
}

type AllianceService struct {
	AllianceServiceHandler
}

func (h *AllianceService) GetAlliances(ctx context.Context, in *GetAlliancesRequest, out *GetAlliancesResponse) error {
	return h.AllianceServiceHandler.GetAlliances(ctx, in, out)
}

func (h *AllianceService) GetAllianceById(ctx context.Context, in *GetAllianceByIdRequest, out *GetAllianceByIdResponse) error {
	return h.AllianceServiceHandler.GetAllianceById(ctx, in, out)
}

func (h *AllianceService) GetAllianceCorporationsById(ctx context.Context, in *GetAllianceCorporationsByIdRequest, out *GetAllianceCorporationsByIdResponse) error {
	return h.AllianceServiceHandler.GetAllianceCorporationsById(ctx, in, out)
}

func (h *AllianceService) GetAllianceIconsById(ctx context.Context, in *GetAllianceIconsByIdRequest, out *GetAllianceIconsByIdResponse) error {
	return h.AllianceServiceHandler.GetAllianceIconsById(ctx, in, out)
}

func (h *AllianceService) GetAllianceNamesByIds(ctx context.Context, in *GetAllianceNamesByIdsRequest, out *GetAllianceNamesByIdsResponse) error {
	return h.AllianceServiceHandler.GetAllianceNamesByIds(ctx, in, out)
}

func init() { proto.RegisterFile("alliance.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x4f, 0xbb, 0x30,
	0x18, 0xff, 0xb3, 0xfd, 0x31, 0xe6, 0xd9, 0xb2, 0x99, 0xce, 0xcd, 0x85, 0x69, 0x32, 0xab, 0x26,
	0x4c, 0x23, 0xd9, 0xd0, 0xc4, 0xb3, 0x7a, 0x30, 0x1c, 0xf4, 0x50, 0x0f, 0x5e, 0x45, 0x68, 0x22,
	0xc9, 0xa0, 0x93, 0xa2, 0x89, 0x77, 0x3f, 0x94, 0x1f, 0xcf, 0x58, 0x5e, 0x52, 0x36, 0xca, 0xe6,
	0x8d, 0x3c, 0xcf, 0xef, 0xad, 0xf4, 0x07, 0xd0, 0x71, 0xe7, 0xf3, 0xc0, 0x8d, 0x3c, 0x6a, 0x2d,
	0x62, 0x96, 0x30, 0xd4, 0xf6, 0x5e, 0x63, 0x1a, 0x32, 0x97, 0x5b, 0x94, 0x07, 0x46, 0xdb, 0x63,
	0x61, 0xc8, 0xa2, 0x74, 0x87, 0xfb, 0xd0, 0xbb, 0xa3, 0xc9, 0x75, 0x46, 0xe0, 0x84, 0xbe, 0xbd,
	0x53, 0x9e, 0x60, 0x13, 0x76, 0xcb, 0x63, 0xbe, 0x60, 0x11, 0xa7, 0x68, 0x07, 0x9a, 0x8e, 0xcf,
	0x87, 0xda, 0xb8, 0x69, 0xea, 0xe4, 0xf7, 0x11, 0x9b, 0x30, 0x90, 0x90, 0x37, 0x9f, 0x8e, 0x9f,
	0x69, 0xa0, 0x0e, 0x34, 0x1c, 0x7f, 0xa8, 0x8d, 0x35, 0x53, 0x27, 0x0d, 0xc7, 0xc7, 0xf7, 0xb0,
	0xb7, 0x82, 0xcc, 0x64, 0x6d, 0xd8, 0xce, 0xe7, 0x82, 0xd0, 0xb2, 0x07, 0x96, 0x1c, 0xda, 0xca,
	0xb7, 0xa4, 0xc0, 0xe1, 0x4b, 0xc0, 0x92, 0xdc, 0x2d, 0x8b, 0x17, 0x2c, 0x76, 0x93, 0x80, 0x45,
	0xbc, 0x2e, 0xc4, 0x15, 0x1c, 0xd5, 0xb2, 0x94, 0xe7, 0x3c, 0x87, 0x91, 0x44, 0x74, 0xbc, 0x35,
	0x3e, 0x0e, 0xec, 0x57, 0xc3, 0x33, 0x83, 0x09, 0xe8, 0x62, 0x98, 0x1d, 0xb7, 0x57, 0x3e, 0xae,
	0x58, 0x91, 0x14, 0x81, 0xa7, 0x25, 0xa9, 0x07, 0x37, 0xa4, 0x42, 0x2a, 0xbf, 0x2b, 0x39, 0x6b,
	0x33, 0xcd, 0x4a, 0xe0, 0x40, 0xc1, 0xc8, 0xdc, 0x67, 0xa0, 0x8b, 0xa9, 0x20, 0xb5, 0xec, 0x51,
	0xf5, 0xcb, 0x16, 0x10, 0x92, 0x22, 0xed, 0xef, 0xff, 0xd0, 0xcd, 0x17, 0x8f, 0x34, 0xfe, 0x08,
	0x3c, 0x8a, 0x9e, 0xa0, 0x2d, 0xb7, 0x04, 0x1d, 0x96, 0x75, 0x2a, 0x8a, 0x65, 0xe0, 0x3a, 0x48,
	0x9a, 0x0e, 0xff, 0x43, 0xcf, 0xd0, 0x5d, 0xaa, 0x0a, 0x3a, 0x56, 0x12, 0xa5, 0x6b, 0x30, 0x4e,
	0xd6, 0xa0, 0x0a, 0x87, 0x2f, 0xad, 0x74, 0x9f, 0xcb, 0x45, 0x40, 0x53, 0xa5, 0x90, 0xa2, 0x69,
	0xc6, 0xec, 0x0f, 0x8c, 0x22, 0x06, 0x2b, 0x7d, 0x67, 0x45, 0x4d, 0xd0, 0x44, 0x29, 0xb6, 0xdc,
	0x3c, 0xe3, 0x74, 0x13, 0x68, 0x61, 0x18, 0x43, 0xbf, 0xb2, 0x1a, 0x48, 0x2d, 0xb3, 0xd2, 0x38,
	0xe3, 0x6c, 0x23, 0x6c, 0xee, 0xf9, 0xb2, 0x25, 0x7e, 0x35, 0x17, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x92, 0xb8, 0x39, 0x77, 0x98, 0x04, 0x00, 0x00,
}
