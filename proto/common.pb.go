// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package chremoas_esi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EntityType int32

const (
	EntityType_ALLIANCE    EntityType = 0
	EntityType_CORPORATION EntityType = 1
	EntityType_CHARACTER   EntityType = 2
)

var EntityType_name = map[int32]string{
	0: "ALLIANCE",
	1: "CORPORATION",
	2: "CHARACTER",
}
var EntityType_value = map[string]int32{
	"ALLIANCE":    0,
	"CORPORATION": 1,
	"CHARACTER":   2,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}
func (EntityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Alliance struct {
	Name         string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Ticker       string `protobuf:"bytes,2,opt,name=Ticker" json:"Ticker,omitempty"`
	ExecutorCorp int32  `protobuf:"varint,3,opt,name=ExecutorCorp" json:"ExecutorCorp,omitempty"`
	DateFounded  int64  `protobuf:"varint,4,opt,name=DateFounded" json:"DateFounded,omitempty"`
}

func (m *Alliance) Reset()                    { *m = Alliance{} }
func (m *Alliance) String() string            { return proto.CompactTextString(m) }
func (*Alliance) ProtoMessage()               {}
func (*Alliance) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Alliance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Alliance) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *Alliance) GetExecutorCorp() int32 {
	if m != nil {
		return m.ExecutorCorp
	}
	return 0
}

func (m *Alliance) GetDateFounded() int64 {
	if m != nil {
		return m.DateFounded
	}
	return 0
}

type Icons struct {
	PSixtyFour      string `protobuf:"bytes,1,opt,name=PSixtyFour" json:"PSixtyFour,omitempty"`
	POneTwentyEight string `protobuf:"bytes,2,opt,name=POneTwentyEight" json:"POneTwentyEight,omitempty"`
}

func (m *Icons) Reset()                    { *m = Icons{} }
func (m *Icons) String() string            { return proto.CompactTextString(m) }
func (*Icons) ProtoMessage()               {}
func (*Icons) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Icons) GetPSixtyFour() string {
	if m != nil {
		return m.PSixtyFour
	}
	return ""
}

func (m *Icons) GetPOneTwentyEight() string {
	if m != nil {
		return m.POneTwentyEight
	}
	return ""
}

type AllianceNames struct {
	AllianceId   int32  `protobuf:"varint,1,opt,name=AllianceId" json:"AllianceId,omitempty"`
	AllianceName string `protobuf:"bytes,2,opt,name=AllianceName" json:"AllianceName,omitempty"`
}

func (m *AllianceNames) Reset()                    { *m = AllianceNames{} }
func (m *AllianceNames) String() string            { return proto.CompactTextString(m) }
func (*AllianceNames) ProtoMessage()               {}
func (*AllianceNames) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *AllianceNames) GetAllianceId() int32 {
	if m != nil {
		return m.AllianceId
	}
	return 0
}

func (m *AllianceNames) GetAllianceName() string {
	if m != nil {
		return m.AllianceName
	}
	return ""
}

type Character struct {
	Name           string  `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Description    string  `protobuf:"bytes,2,opt,name=Description" json:"Description,omitempty"`
	CorporationId  int32   `protobuf:"varint,3,opt,name=CorporationId" json:"CorporationId,omitempty"`
	AllianceId     int32   `protobuf:"varint,4,opt,name=AllianceId" json:"AllianceId,omitempty"`
	Birthday       int64   `protobuf:"varint,5,opt,name=Birthday" json:"Birthday,omitempty"`
	Gender         string  `protobuf:"bytes,6,opt,name=Gender" json:"Gender,omitempty"`
	RaceId         int32   `protobuf:"varint,7,opt,name=RaceId" json:"RaceId,omitempty"`
	BloodlineId    int32   `protobuf:"varint,8,opt,name=BloodlineId" json:"BloodlineId,omitempty"`
	AncestryId     int32   `protobuf:"varint,9,opt,name=AncestryId" json:"AncestryId,omitempty"`
	SecurityStatus float32 `protobuf:"fixed32,10,opt,name=SecurityStatus" json:"SecurityStatus,omitempty"`
}

func (m *Character) Reset()                    { *m = Character{} }
func (m *Character) String() string            { return proto.CompactTextString(m) }
func (*Character) ProtoMessage()               {}
func (*Character) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Character) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Character) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Character) GetCorporationId() int32 {
	if m != nil {
		return m.CorporationId
	}
	return 0
}

func (m *Character) GetAllianceId() int32 {
	if m != nil {
		return m.AllianceId
	}
	return 0
}

func (m *Character) GetBirthday() int64 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *Character) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Character) GetRaceId() int32 {
	if m != nil {
		return m.RaceId
	}
	return 0
}

func (m *Character) GetBloodlineId() int32 {
	if m != nil {
		return m.BloodlineId
	}
	return 0
}

func (m *Character) GetAncestryId() int32 {
	if m != nil {
		return m.AncestryId
	}
	return 0
}

func (m *Character) GetSecurityStatus() float32 {
	if m != nil {
		return m.SecurityStatus
	}
	return 0
}

type Corporation struct {
	Name         string  `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Ticker       string  `protobuf:"bytes,2,opt,name=Ticker" json:"Ticker,omitempty"`
	MemberCount  int32   `protobuf:"varint,3,opt,name=MemberCount" json:"MemberCount,omitempty"`
	CeoId        int32   `protobuf:"varint,4,opt,name=CeoId" json:"CeoId,omitempty"`
	AllianceId   int32   `protobuf:"varint,5,opt,name=AllianceId" json:"AllianceId,omitempty"`
	Description  string  `protobuf:"bytes,6,opt,name=Description" json:"Description,omitempty"`
	TaxRate      float32 `protobuf:"fixed32,7,opt,name=TaxRate" json:"TaxRate,omitempty"`
	CreationDate int64   `protobuf:"varint,8,opt,name=CreationDate" json:"CreationDate,omitempty"`
	CreatorId    int32   `protobuf:"varint,9,opt,name=CreatorId" json:"CreatorId,omitempty"`
	Url          string  `protobuf:"bytes,10,opt,name=Url" json:"Url,omitempty"`
	FactionId    int32   `protobuf:"varint,11,opt,name=FactionId" json:"FactionId,omitempty"`
}

func (m *Corporation) Reset()                    { *m = Corporation{} }
func (m *Corporation) String() string            { return proto.CompactTextString(m) }
func (*Corporation) ProtoMessage()               {}
func (*Corporation) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Corporation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Corporation) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *Corporation) GetMemberCount() int32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *Corporation) GetCeoId() int32 {
	if m != nil {
		return m.CeoId
	}
	return 0
}

func (m *Corporation) GetAllianceId() int32 {
	if m != nil {
		return m.AllianceId
	}
	return 0
}

func (m *Corporation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Corporation) GetTaxRate() float32 {
	if m != nil {
		return m.TaxRate
	}
	return 0
}

func (m *Corporation) GetCreationDate() int64 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

func (m *Corporation) GetCreatorId() int32 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *Corporation) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Corporation) GetFactionId() int32 {
	if m != nil {
		return m.FactionId
	}
	return 0
}

func init() {
	proto.RegisterType((*Alliance)(nil), "chremoas.esi.Alliance")
	proto.RegisterType((*Icons)(nil), "chremoas.esi.Icons")
	proto.RegisterType((*AllianceNames)(nil), "chremoas.esi.AllianceNames")
	proto.RegisterType((*Character)(nil), "chremoas.esi.Character")
	proto.RegisterType((*Corporation)(nil), "chremoas.esi.Corporation")
	proto.RegisterEnum("chremoas.esi.EntityType", EntityType_name, EntityType_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x51, 0xaf, 0xd2, 0x30,
	0x14, 0xc7, 0xdd, 0x60, 0x5c, 0x76, 0x00, 0x2f, 0x69, 0x8c, 0x59, 0x8c, 0x31, 0xcb, 0x62, 0x0c,
	0xf1, 0xe1, 0xbe, 0xf8, 0xe6, 0xdb, 0xee, 0x04, 0x5d, 0x72, 0x05, 0x2c, 0xf3, 0x03, 0xf4, 0x6e,
	0x27, 0xd2, 0x08, 0x2d, 0xe9, 0xba, 0xc8, 0x12, 0xbf, 0x9a, 0xf1, 0xab, 0x99, 0x96, 0x81, 0x03,
	0x7c, 0xf1, 0xad, 0xff, 0x5f, 0xbb, 0x93, 0xff, 0xf9, 0x9f, 0x33, 0x18, 0xe6, 0x72, 0xbb, 0x95,
	0xe2, 0x6e, 0xa7, 0xa4, 0x96, 0x64, 0x98, 0xaf, 0x15, 0x6e, 0x25, 0x2b, 0xef, 0xb0, 0xe4, 0xd1,
	0x4f, 0xe8, 0xc7, 0x9b, 0x0d, 0x67, 0x22, 0x47, 0x42, 0xa0, 0x3b, 0x67, 0x5b, 0x0c, 0x9c, 0xd0,
	0x99, 0xf8, 0xd4, 0x9e, 0xc9, 0x73, 0xe8, 0x65, 0x3c, 0xff, 0x8e, 0x2a, 0x70, 0x2d, 0x6d, 0x14,
	0x89, 0x60, 0x38, 0xdd, 0x63, 0x5e, 0x69, 0xa9, 0x12, 0xa9, 0x76, 0x41, 0x27, 0x74, 0x26, 0x1e,
	0x3d, 0x63, 0x24, 0x84, 0xc1, 0x07, 0xa6, 0x71, 0x26, 0x2b, 0x51, 0x60, 0x11, 0x74, 0x43, 0x67,
	0xd2, 0xa1, 0x6d, 0x14, 0x7d, 0x01, 0x2f, 0xcd, 0xa5, 0x28, 0xc9, 0x2b, 0x80, 0xe5, 0x8a, 0xef,
	0x75, 0x3d, 0x93, 0x95, 0x6a, 0x0c, 0xb4, 0x08, 0x99, 0xc0, 0xed, 0x72, 0x21, 0x30, 0xfb, 0x81,
	0x42, 0xd7, 0x53, 0xfe, 0x6d, 0xad, 0x1b, 0x3f, 0x97, 0x38, 0x5a, 0xc1, 0xe8, 0xd8, 0x90, 0x69,
	0xc0, 0x96, 0x3e, 0x82, 0xb4, 0xb0, 0xa5, 0x3d, 0xda, 0x22, 0xa6, 0x93, 0xf6, 0x07, 0x4d, 0xdd,
	0x33, 0x16, 0xfd, 0x72, 0xc1, 0x4f, 0xd6, 0x4c, 0xb1, 0x5c, 0xa3, 0xfa, 0x67, 0x4e, 0xa6, 0x57,
	0x2c, 0x73, 0xc5, 0x77, 0x9a, 0x4b, 0xd1, 0x14, 0x69, 0x23, 0xf2, 0x1a, 0x46, 0x26, 0x15, 0xa9,
	0x98, 0x91, 0x69, 0xd1, 0x44, 0x76, 0x0e, 0x2f, 0xdc, 0x76, 0xaf, 0xdc, 0xbe, 0x80, 0xfe, 0x3d,
	0x57, 0x7a, 0x5d, 0xb0, 0x3a, 0xf0, 0x6c, 0xa0, 0x27, 0x6d, 0x66, 0xf5, 0x11, 0x45, 0x81, 0x2a,
	0xe8, 0x1d, 0x66, 0x75, 0x50, 0x86, 0x53, 0x66, 0xeb, 0xdd, 0xd8, 0x7a, 0x8d, 0x32, 0x9e, 0xef,
	0x37, 0x52, 0x16, 0x1b, 0x2e, 0xcc, 0x65, 0xdf, 0x5e, 0xb6, 0x91, 0x75, 0x23, 0x72, 0x2c, 0xb5,
	0xaa, 0xd3, 0x22, 0xf0, 0x1b, 0x37, 0x27, 0x42, 0xde, 0xc0, 0xd3, 0x15, 0xe6, 0x95, 0xe2, 0xba,
	0x5e, 0x69, 0xa6, 0xab, 0x32, 0x80, 0xd0, 0x99, 0xb8, 0xf4, 0x82, 0x46, 0xbf, 0x5d, 0x18, 0xb4,
	0xfa, 0xfc, 0xaf, 0x4d, 0x0b, 0x61, 0xf0, 0x19, 0xb7, 0x8f, 0xa8, 0x12, 0x59, 0x09, 0xdd, 0xa4,
	0xd6, 0x46, 0xe4, 0x19, 0x78, 0x09, 0xca, 0x53, 0x5c, 0x07, 0x71, 0x91, 0xa4, 0x77, 0x95, 0xe4,
	0xc5, 0xc4, 0x7a, 0xd7, 0x13, 0x0b, 0xe0, 0x26, 0x63, 0x7b, 0xca, 0x34, 0xda, 0xe0, 0x5c, 0x7a,
	0x94, 0x66, 0x67, 0x12, 0x85, 0xb6, 0x17, 0xb3, 0xce, 0x36, 0xba, 0x0e, 0x3d, 0x63, 0xe4, 0x25,
	0xf8, 0x56, 0x4b, 0x75, 0x8a, 0xee, 0x2f, 0x20, 0x63, 0xe8, 0x7c, 0x55, 0x1b, 0x1b, 0x97, 0x4f,
	0xcd, 0xd1, 0xbc, 0x9f, 0xb1, 0xbc, 0xd9, 0x8d, 0xc1, 0xe1, 0xfd, 0x09, 0xbc, 0x7d, 0x0f, 0x30,
	0x15, 0x9a, 0xeb, 0x3a, 0xab, 0x77, 0x48, 0x86, 0xd0, 0x8f, 0x1f, 0x1e, 0xd2, 0x78, 0x9e, 0x4c,
	0xc7, 0x4f, 0xc8, 0x2d, 0x0c, 0x92, 0x05, 0x5d, 0x2e, 0x68, 0x9c, 0xa5, 0x8b, 0xf9, 0xd8, 0x21,
	0x23, 0xf0, 0x93, 0x4f, 0x31, 0x8d, 0x93, 0x6c, 0x4a, 0xc7, 0xee, 0x63, 0xcf, 0xfe, 0xf8, 0xef,
	0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x23, 0x56, 0x80, 0x08, 0x04, 0x00, 0x00,
}
